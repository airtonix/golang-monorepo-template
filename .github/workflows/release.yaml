name: Release

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  findChanges:
    runs-on: ubuntu-latest

    outputs:
      nodePaths: ${{ steps.interrogate.outputs.nodePaths }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup-asdf
      - name: Nodejs
        uses: ./.github/actions/setup-nodejs
      - name: Golang
        uses: ./.github/actions/setup-golang

      - id: interrogate
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const {execSync} = require('child_process');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const latestRelease = await github.repos.getLatestRelease({
              owner,
              repo
            });
            console.log(`latest release: ${JSON.stringify(latestRelease.data)}`);
            execSync('git pull --tags');
            execSync(`git reset --hard ${latestRelease.data.tag_name}`);
            const status = execSync(`git diff --name-only origin/master`, { encoding: 'utf-8'});
            console.log(status);
            const changes = status.split('\n');
            let nodePaths = new Set();
            for (const change of changes) {
              const [scope, app] = change.split('/')
              if (scope === 'apps') {
                  nodePaths.add(app);
              };
            }
            nodePaths = Array.from(nodePaths);
            console.log(`::set-output name=nodePaths::${JSON.stringify(nodePaths)}`);

  Process:
    runs-on: ubuntu-latest

    needs: findChanges

    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.findChanges.outputs.nodePaths)}}

    steps:
      - uses: google-github-actions/release-please-action@v3
        id: tag-release
        with:
          path: packages/${{ matrix.package }}
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: ${{ matrix.package }}
          command: github-release
          bump-patch-for-minor-pre-major: true
          bump-minor-pre-major: true

      - uses: actions/checkout@v2
        if: ${{ steps.tag-release.outputs.releases_created }}

  release-pr:
    runs-on: ubuntu-latest
    needs:
      - findChanges
      - release-please-release
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.findChanges.outputs.nodePaths)}}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          path: packages/${{ matrix.package }}
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: ${{ matrix.package }}
          monorepo-tags: true
          command: release-pr
